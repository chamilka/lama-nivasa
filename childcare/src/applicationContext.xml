<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd" >



	<context:annotation-config />
	<context:component-scan base-package="pdn.sci.cs" />
	<context:property-placeholder location="classpath:jdbc.properties" />

<!--    	<import resource="monitor_scheduler.xml" /> -->

	<!-- DI -->
	<bean class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor" />

	<!-- DataSource -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>pdn.sci.cs.entity.Child</value>
				<value>pdn.sci.cs.entity.ChildPicture</value>
				<value>pdn.sci.cs.entity.ChildGuardian</value>
				<value>pdn.sci.cs.entity.ChildRecord</value>
				<value>pdn.sci.cs.entity.ChildCareplan</value>
				<value>pdn.sci.cs.entity.Province</value>
				<value>pdn.sci.cs.entity.District</value>
				<value>pdn.sci.cs.entity.DivisionalSecretariat</value>
				<value>pdn.sci.cs.entity.GenericCategory</value>
				<value>pdn.sci.cs.entity.GenericList</value>
				<!--  value>pdn.sci.cs.entity.GramaSevaka</value -->
				<value>pdn.sci.cs.entity.GramaSevakaDivision</value>
				<value>pdn.sci.cs.entity.LamaNivasa</value>
				<value>pdn.sci.cs.entity.ProbationUnit</value>
				<value>pdn.sci.cs.entity.SystemUser</value>
				<value>pdn.sci.cs.entity.MonthlyData</value>
				<value>pdn.sci.cs.entity.MonthlyDataReport</value> <!--  only for reporting -->
				<value>pdn.sci.cs.entity.PoliceStation</value>
				
			</list>
		</property>
		<property name="hibernateProperties">
		   <props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.bytecode.use_reflection_optimizer">false</prop>
				<prop key="hibernate.jdbc.batch_size">10</prop>
				<prop key="hibernate.max_fetch_depth">1</prop>
				<prop key="hibernate.transaction.auto_close_session">true</prop>

				<prop key="hibernate.c3p0.min_size">3</prop>
			    <prop key="hibernate.c3p0.max_size">10</prop>
			    <prop key="hibernate.c3p0.timeout">3000</prop>
			    <prop key="hibernate.c3p0.acquire_increment">1</prop>
			    <prop key="hibernate.c3p0.idle_test_period">3000</prop>
			    <prop key="hibernate.c3p0.max_statements">180</prop>

				<!--<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
			--></props>
		</property>
    </bean>

	<!-- Transaction -->
	<tx:annotation-driven transaction-manager="txManager" />

	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- Apply transactions to all methods in our service layer. -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<!-- the transactional semantics... -->
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRES_NEW" />
			<tx:method name="edit*" propagation="REQUIRES_NEW" />
			<tx:method name="update*" propagation="REQUIRES_NEW" />
			<tx:method name="add*" propagation="REQUIRES_NEW" />
			<tx:method name="delete*" propagation="REQUIRES_NEW" />
			<tx:method name="batchUpdate" propagation="REQUIRES_NEW" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="view*" read-only="true" />

			<!-- all other methods are read-only -->
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="serviceMethods" expression="execution(* pdn.sci.cs.service*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods" />
	</aop:config>

	<!-- ServletContext -->
	<bean id="servletContext" class="org.springframework.web.context.support.ServletContextFactoryBean" />
	
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="axio.callcenter@gmail.com" />
		<property name="password" value="axiocallcenter" />
			
		<property name="javaMailProperties">
		   <props>
	   	      <prop key="mail.smtp.auth">true</prop>
		      <prop key="mail.smtp.starttls.enable">true</prop>
	   		</props>
		</property>
	</bean>
		
	<bean id="mailMail" class="pdn.sci.cs.util.MailMail">
		<property name="mailSender" ref="mailSender" />
	</bean>

</beans>
